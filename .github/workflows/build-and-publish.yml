name: Build and Publish

on:
  workflow_dispatch:

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22.2.0

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.15.8

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build apps with Turbopack
        run: pnpm turbo run build

      - name: Log in to Github Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker images
        run: |
          for app in apps/*; do
            if [ -d "$app" ] && [ -f "$app/Dockerfile" ]; then
              app_name=$(basename "$app")
              echo "Building and pushing Docker image for $app_name"
              docker build -t ghcr.io/${{ github.repository }}/$app_name:${{ github.sha }} -t ghcr.io/${{ github.repository }}/$app_name:latest -f $app/Dockerfile $app
              docker push ghcr.io/${{ github.repository }}/$app_name:${{ github.sha }}
              docker push ghcr.io/${{ github.repository }}/$app_name:latest
            elif [ -d "$app" ] && [ ! -f "$app/Dockerfile" ]; then
              echo "Skipping $app: No Dockerfile found"
            fi
          done
