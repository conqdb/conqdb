.root {
  position: relative;
  display: flex;
  justify-content: center;
  z-index: 1;
}

.list {
  display: flex;
  justify-content: center;
  list-style: none;
  padding-inline-start: 0;
  padding: 0;
  margin: 0;
}

.trigger,
.link {
  padding: var(--mantine-spacing-xs);
  user-select: none;
  font-weight: 500;
  line-height: 1;
  border-radius: var(--mantine-radius-sm);
  font-size: rem(14);

  &:hover {
    background-color: var(--menu-item-hover);
  }
}

.childLink {
  padding: var(--mantine-spacing-xs);
  border-radius: var(--mantine-radius-sm);

  &:hover {
    background-color: var(--menu-item-hover);
  }
}

.disabled .childLabel,
.disabled .childDescription,
.disabled .childIcon {
  opacity: 0.32;
}

.disabled.childLink {
  cursor: not-allowed;
  &:hover {
    background: initial;
  }
}

.comingSoon {
  @mixin light {
    color: var(--mantine-color-gray-8);
  }

  @mixin dark {
    color: var(--mantine-color-dark-4);
  }
}

.content {
  position: absolute;
  top: 0;
  left: 0;
  width: rem(572);

  animation-duration: 250ms;
  animation-timing-function: ease;

  @mixin dark {
    background: var(--mantine-color-dark-10);
  }

  @mixin light {
    background: var(--mantine-color-gray-0);
  }

  &[data-motion='from-start'] {
    animation-name: enterFromLeft;
  }

  &[data-motion='from-end'] {
    animation-name: enterFromRight;
  }

  &[data-motion='to-start'] {
    animation-name: exitToLeft;
  }

  &[data-motion='to-end'] {
    animation-name: exitToRight;
  }
}

.indicator {
  display: flex;
  align-items: flex-end;
  justify-content: center;
  height: rem(18);
  top: 100%;
  overflow: hidden;
  z-index: 1;
  transition: width, transform 250ms ease;

  &[data-state='visible'] {
    animation: fadeIn 200ms ease;
  }

  &[data-state='hidden'] {
    animation: fadeOut 200ms ease;
  }
}

.viewport {
  position: relative;
  transform-origin: top center;
  margin-top: rem(18);
  height: var(--radix-navigation-menu-viewport-height);
  transition: width, height, 300ms ease;

  @mixin light {
    box-shadow: var(--mantine-shadow-sm);
  }

  &[data-state='open'] {
    animation: scaleIn 200ms ease;
  }

  &[data-state='closed'] {
    animation: scaleOut 200ms ease;
  }

  @media (min-width: 600px) {
    width: var(--radix-navigation-menu-viewport-width);
  }
}

.viewportPosition {
  position: absolute;
  display: flex;
  justify-content: center;
  width: rem(572);
  top: 100%;
  left: 0;
  perspective: rem(2000);
}

.arrow {
  position: relative;
  top: 72%;
  width: rem(16);
  height: rem(16);
  transform: rotate(45deg);
  border-top-left-radius: rem(2);

  background: var(--mantine-menu-background-color);
  border: rem(1) solid var(--mantine-color-default-border);
}

@keyframes enterFromRight {
  from {
    opacity: 0;
    transform: translateX(rem(72));
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes enterFromLeft {
  from {
    opacity: 0;
    transform: translateX(rem(-72));
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes exitToRight {
  from {
    opacity: 1;
    transform: translateX(0);
  }
  to {
    opacity: 0;
    transform: translateX(rem(72));
  }
}

@keyframes exitToLeft {
  from {
    opacity: 1;
    transform: translateX(0);
  }
  to {
    opacity: 0;
    transform: translateX(rem(-72));
  }
}

@keyframes scaleIn {
  from {
    opacity: 0;
    transform: rotateX(-30deg) scale(0.9);
  }
  to {
    opacity: 1;
    transform: rotateX(0deg) scale(1);
  }
}

@keyframes scaleOut {
  from {
    opacity: 1;
    transform: rotateX(0deg) scale(1);
  }
  to {
    opacity: 0;
    transform: rotateX(-10deg) scale(0.95);
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}
